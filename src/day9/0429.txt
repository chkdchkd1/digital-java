
오버로딩 : 동일한 이름을 가진 메소드/생성자가 여러개 존재하는것 
오버라이딩 : 상속전제하 

-인스턴스 (객체) 메서드는 클래스 메서드에서 사용할 수 없다.
 => 클래스 메서드는 객체를 만드질 않고 사용가능하나 인스턴트 메서드는
인스턴스 (객체)를 생성하고 난 뒤에 사용하기 때문에 그냥 사용 (객체를 생성하면 가능)은 불가능

final 
- 변수 :  상수 수정 X..? 
- 메서드 :  오버라이딩을 할 수 없다 . 오버로딩은 가능 
- 클래스 : 누군가의 자식은 될 수 있지만 (상속 받을 수 있지만 ) 누군가의 부모 클래스가 될 수 없다 .  
final 멤버 변수는 명시적 초기화를 하던지 생성자에서 초기화를 해야한다. 

재귀 메소드 
- 메소드 안에서 자신을 호출하는 형태의 메서드 
- 재귀 메소드는 빠져나가기 위한 조건을 걸어주어야 한다.
- 재귀 메소드를 사용하기 전에 반복문을 이용하여 먼저 해결 해보고 반복문을 이용하여 복잡하게 코드를 
작성하는 것보다 재귀 메서드를 이용하여 간결하게 작성하는 것이 더 효율 적으로 여겨지면 그때 재귀 메서드를
이용해라 
- 상속에서 실수 할 수 있다. 
(오버라이딩 상황에서 부모 메소드를 활용하고 싶을 때 앞에 super.가 없으면 재귀호출이 되어 스택오버플로우 에러 발생)