메서드 : 하나의 기능을 하도록 모아놓은 코드 
클래스 : 어떠한 정보를 나타나기 위해 모아놓은 코드 
- 변수 : 정보를 관리  
- 메서드 : 기능을 관리 (편하게 쓰기 위해서)
- 생성자 : 변수 초기화 

메소드와 생성자의 호출하는 시기 
-메소드는 메소드를 호출 할 때 실행
- 생성자는 객체를 생성 할 때만 실행, 생성자는 중간에 직접 호출 할 수 없다.

오버로딩 : 동일한 이름을 가진 생성자나 메소드가 2개 이상인 경우 다음
아래를 만족하면 오버로딩, 만족하지 않으면 에러 발생
- 매개변수가 달라야 한다.
 1.갯수
 2. 자료형

클래스 변수 /메서드 : static
객체 변수 / 메서드 : static 없음

- 클래스 변수는 객체 메서드에서 사용가능하다 O
- 객체 변수는 클래스 메서드에서 사용가능하다 X
- 클래스 메서드는 객체 메서드에서 사용가능 하다 O
-객체 메서드는 클래스 메서드에서 사용가능하다. X 

> ~에서는 만들어져있다는 뜻 
클래스 변수 메서드는 클래스가 언급만 대도 생성, 객체 메서드 변수는 객체를 생성해야 

	Scanner scan // 클래스 생성
	int i = scan.nextInt(); // 불가능, 왜냐 하면 객체 변수 생성 전에 메서드를 사용하려고 했기에 
	Scanner scan = new Scanner(System.in); // 객체 메서드 변수 생성 
		


class Point1{ 
	private int x1 ;  
	private int y1 ; 
	public void printPoint(){}
	public void moveXY(int x, int y) {}
	public int getX1() {}
	public void setX1(int x1) {}

---------------------------------------------------------------------------------
에러 내용 
변수명 cannot be resolved to a variable
에러 원인
변수를 선언하지 않고 사용해서 => 변수 선언

에러 내용 
the local variable 변수명 may not have been initialized
에러 원인 
변수를 초기화하지않고 값을 사용해서 => 변수 초기화

에러 내용
duplicate local bariable 변수명
에러 원인
변수를 중복 선언해서 => 변수명 수정 또는 변수 삭제 

에러 내용
Syntax error on token "else", delete this token
에러 원인
if문이 ;에 의해 끝난 후  else 가 온경우 

에러 내용
the left-hand side of an assignment must be a variable
에러 상황
else if를 써야하는데 else를 쓰고 조건문을 쓰는 경우 
해당 조건문이 실행문으로 인식이 되고 따라서 왼쪽에 변수명이 와야한다
= > else if를 쓰던지 또는 else의 조건문을 제거 


---------------------------------------------------------------------------------



