변수 
- 문제를 해결하기 위해 알맞은 변수를 선언할 수 있다.

자동형변환 
-자동 : 정수 -> 실수 , 작은바이트 -> 큰바이트 (ex short ->long) 
-명시적 : 자동형변환이 안되는 경우와 자동형변환이 가능하지만
의도적으로 자료형 변환이 필요한 경우 
byte a = 10;    
--> 정수 10을 byte 데이터 타입의 변수인 a에 저장
int b = a;        
--> byte 데이터 타입의 변수인 a를 int 데이터 타입의 변수인 b에저장

예제1) 정수 값을 실수로 변환할 때

int intValue = 200;                           
-->  정수 200을 int 데이터 타입 변수 intValue에 저장

double doubleValue = intValue;         
 -->  int 데이터 타입 변수 intValue를 double 데이터 타입 변수 doubleValue에 저장.
이 때, 200이라는 정수 값은 실수로 변환되면서 .0이 붙어 200.0으로 저장됩니다.


예제2) 문자 값을 정수로 변환할 때

char charValue = 'A';                  
-->  문자 A를 char 데이터 타입 변수 charValue에 저장

int intValue = charValue;             
--> char 데이터 타입 변수 charValue를 int 데이터 타입 변수 intValue에 저장
 이 때, 문자가 정수로 자동 형변환(Promotion) 될 때는 문자의 유니코드 값이 저장됩니다.
본 예제의 경우 문자 A의 유니코드 값인 65가 저장됩니다.


객체변수 : 클래스의 멤버변수로, static이 붙지 않은 변수,
객체생성후 사용가능
클래스변수 :클래스의 멤버변수로, static 이 붙는 변수 
객체 생성없이 사용가능

대입연산자 : =
 - 오른쪽에 있는 값을 왼쪽에 저장
int num = (int)3.14;
- 자료형변환이 가능할때만 = 을 쓸 수있다.
- 아래코드에서 자동형변환이 되기위한 조건-
ex ) A a = new A();
   B b = a; 
- 클래스 A가 클래스 B에게 상속받는 경우 
: 객체 a는 자식클래스의 객체이고, b는 부모 클래스의 객체이므로 
자식 >부모로 변하는 경우이기 때문에 자동형변환이 가능하다. 
 
 
- 접근제한자 public, protected, default, private
abstract : 추상
- 추상 메소드 : 메소드의 구현부가 없는 네소드
 => 객체를 만드려면 추상메소드를 정의해야한다. => 오버라이딩
- 인터페이스 : 상수와 추상메소드로만 이루어진 것
- 기능 요약으로 어떠한 기능들이 필요한지 나열해 놓은 것 
- 협엽할 때 작업하기가 용이하다 .


컬렉션 프레임워크 
Collection(List,Set) Map
- List(순서 보장, 중복가능)
- Set(순서 X, 중복 불가능)
- Map Key(중복 불가), value(중복가능), 순서


열거형 : enum =>데이터의 값이 제한적이어서 값들을 상수로 취급해서 사용하고 싶을때 씀 
지네릭스 : 클래스의 멤버변수의 자료형을 미리 설정하지 않은 클래스
	객체가 생성 될 때 멤버 변수의 자료형이 결정된다 
- 컬렉션프레임워크에서 많이사용 

