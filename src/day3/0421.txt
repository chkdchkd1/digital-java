조건문
else : 현재 위치를 기준으로 위에 있는 모든 조건식이 거짓이면

p.156 반복문
반복문 : 규칙성을 가진 작업을 반복적으로 할 때 
1. 반복횟수 : 초기화, 조건식, 증감연산식
2. 규칙성 : 실행문
3. 반복문종료후

p.166 (나중에 배열 설명후)
p175~76
break : 반복문을 빠져 나가는 역할, 조건문과 무조건 같이 쓰임
continue : 스킵, for문에서는 증감 연산식 위치로, while문에서 조건식 위치로 이동

p.178
p161 
( 중첩 if문 :  if문의 실행문안에 또 if문 오는것 )
p.167 while : 조건식이 거짓이 될때 까지 블럭내 문장을 반복한다. 
*for문과 while문의 비교부분 책 확인하기 
값이 규칙적으로 증가하지 않을때 쓰는 특정상황에 만족해서 끝날때 
while(조건식){ 
실행문,
}
- 조건식에 항상 참인값 ex) while(ture) 무한루프 

초기화;
while(조건식){
	실행문;
	증감연산식;
} 
p.173
while은 조건식에 따라 블럭내 내용이 한번도 수행되지 않을 수도 있지만 
do while문은 무조건 1번은 실행된다.
do {
 	실행문;
}while (조건식);

p.182 ~187 책으로 읽어보긩... 

배열 : (같은 의미와) 같은 자료형을 가진 변수들의 집합
   ex) int score = new int[5];  같은 점수끼리 모였다는걸 알수 있음 
why? 일반 변수 10개를 이용해서는 반복문을 사용할 수 없다.
효율적으로 변수를 관리하기 위해서 사용

배열선언
자료형[] 배열명;
자료형 배열명[];

그림 5-2
0x100 = 주소를 뜻함

p.192

